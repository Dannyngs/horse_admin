{"version":3,"sources":["scripts/app-d0be662bd2.js"],"names":["angular","module","constant","factory","currentUser","curentToken","AuthService","login","user","token","logout","isLogined","getCurrentUser","getCurentToken","$rootScope","$q","$window","request","config","headers","UpdateController","$http","$scope","toastr","$location","$uibModalInstance","selected_user","backendURL","update","_id","note","salePrice","password","updateMember","warning","put","then","res","users","data","success","close","error","closeModel","dismiss","$inject","controller","acmeNavbar","NavbarController","directive","restrict","templateUrl","scope","creationDate","controllerAs","bindToController","MultipleController","getMultipleLogin","get","lastUser","multiples","i","length","username","count","push","date","multiplelogin","emptyRecords","console","log","MemberController","$uibModal","showpassword","showpass","getMembers","dailyIncome","monthlyIncome","today","Date","getDate","registeredOn","regDate","getFullYear","getMonth","parseInt","deleteMember","id","confirm","err","showAddMember","$","modal","addMember","role","roles","label","value","showUpdateMember","openUpdate","open","animation","resolve","openCreate","items","LoginController","adminLogin","post","path","CurrentController","getOnlineMembers","onlineusers","refreshOnlineMembers","takeoffline","CreateController","saveMember","AccountController","getTotal","daytotal","monthtotal","open1","popup1","opened","open2","popup2","setDate","year","month","day","dt","dateOptions","formatYear","startingDay","getRange","from","to","rangetotal","totalcost","totalusers","runBlock","$log","debug","$on","event","toState","toParams","fromState","fromParams","authRequired","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","$logProvider","toastrConfig","$httpProvider","debugEnabled","allowHtml","timeOut","positionClass","interceptors","$templateCache"],"mappings":"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","file":"scripts/app-d0be662bd2.js","sourcesContent":["\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin', ['ngResource', 'ui.router', 'ui.bootstrap', 'toastr'])\r\n\r\n     .constant('backendURL', 'http://racingprohk.ap-southeast-1.elasticbeanstalk.com/admin')\r\n  //.constant('backendURL', 'http://localhost/admin')\r\n      .factory('AuthService',function(){\r\n      var currentUser=null;\r\n      var curentToken=null;\r\n      var AuthService= {\r\n          \r\n          login:function(user,token){\r\n              currentUser=user;\r\n              curentToken=token;\r\n             \r\n          },\r\n          logout:function(){\r\n              currentUser=null;\r\n             curentToken=null;\r\n\r\n              \r\n          },\r\n          isLogined:function(){\r\n              if(!curentToken)\r\n              return false;\r\n              return true;\r\n          },\r\n          getCurrentUser:function(){\r\n          \r\n          return currentUser;\r\n            \r\n            },\r\n          getCurentToken:function(){\r\n          \r\n          return curentToken;\r\n            \r\n            }\r\n          \r\n          \r\n      }\r\n      \r\n      return AuthService;\r\n      \r\n      \r\n  })\r\n        .factory('authInterceptor', function ($rootScope, $q, $window,AuthService) {\r\n  return {\r\n    request: function (config) {\r\n      config.headers = config.headers || {};\r\n      if (AuthService.getCurentToken()) {\r\n        config.headers.token = AuthService.getCurentToken();\r\n      }\r\n      return config;\r\n    }\r\n  }\r\n  \r\n});;\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('UpdateController', UpdateController);\r\n\r\n  /** @ngInject */\r\n  function UpdateController($http, $scope,$rootScope,toastr,AuthService,$location, $uibModalInstance,selected_user,backendURL) {\r\n\r\n  $scope.update={};\r\n     $scope.update._id=selected_user._id;\r\n      $scope.update.note=selected_user.note;\r\n           $scope.update.salePrice=selected_user.salePrice;\r\n     $scope.update.password=selected_user.password;      \r\n      \r\n      \r\n $scope.updateMember = function(user){\r\n\r\n     if(user.password==\"\")return toastr.warning(\"Password cannot be empty\",\"Warning\");\r\n     $http.put(backendURL+'/api/users/'+user._id,user).then(function(res){\r\n          $rootScope.users=res.data;\r\n         toastr.success(\"Success\");\r\n         $uibModalInstance.close();\r\n     },function(res){\r\n         toastr.error(res.data,\"Error\");\r\n\r\n     })\r\n }\r\n\r\n\r\n$scope.closeModel = function(){\r\n\r\n      $uibModalInstance.dismiss('cancel');\r\n    }\r\n\r\n\r\n  }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('horseAdmin')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/view/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n\n    }\n  }\n\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('MultipleController', MultipleController);\r\n\r\n  /** @ngInject */\r\n  function MultipleController($http, $scope,toastr,backendURL) {\r\n         \r\n   \r\n \r\n \r\n      function getMultipleLogin(){\r\n         \r\n          $http.get(backendURL+'/api/multiplelogin').then(function(res){\r\n             \r\n                var lastUser=null;\r\n              var multiples=[];\r\n              var multipleCount = 0;\r\n              for(var i=0;i<res.data.length;i++)\r\n                  {\r\n                      var user =res.data[i];\r\n                      if(user.username!=lastUser)           \r\n                      {\r\n                          user.count = 1;\r\n                          lastUser=user.username;\r\n                          multiples.push(user);\r\n                         \r\n                          \r\n                      }else\r\n                          {\r\n                             multiples[(multiples.length-1)].count++; \r\n                              multiples[(multiples.length-1)].date=user.date;\r\n                              \r\n                          }\r\n                     \r\n                     \r\n                     \r\n                        \r\n                  }\r\n              \r\n              \r\n              \r\n              \r\n              $scope.multiplelogin  = multiples;\r\n          },function(res){\r\n              toastr.error(res.data)\r\n          })\r\n      }\r\n      \r\n      \r\n  \r\n \r\n   \r\n      \r\n      getMultipleLogin();\r\n    \r\n  \r\n \r\n \r\n $scope.emptyRecords = function(){\r\n     \r\n     $http.delete(backendURL+'/api/multiplelogin/').then(function(res){\r\n         toastr.success(res.data,\"Success\");\r\n         getMultipleLogin();\r\n         console.log('empty!')\r\n     },function(res){})\r\n }\r\n\r\n  \r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('MemberController', MemberController);\r\n\r\n  /** @ngInject */\r\n  function MemberController($http, $scope,$rootScope,toastr,$uibModal,backendURL) {\r\n\r\n    var updateModel,createModel;\r\n\r\n      $scope.user={};\r\n      $scope.showpassword=false;\r\n\r\n\r\n\r\n\r\n      $scope.showpass=function(){\r\n\r\n           $scope.showpassword=!$scope.showpassword;\r\n\r\n      }\r\n\r\n\r\n\r\n  $rootScope.getMembers=function(){\r\n\r\n      $http.get(backendURL+'/api/users').then(function(res){\r\n          var dailyIncome = 0;\r\n          var monthlyIncome = 0;\r\n          var today = new Date();\r\n          console.log('todayis :'+today.getDate())\r\n          for(var i=0;i<res.data.length;i++)\r\n              {\r\n                  var user = res.data[i];\r\n\r\n\r\n                  if(user.registeredOn && user.salePrice){\r\n                      var regDate = new Date(user.registeredOn)\r\n\r\n                      if( regDate.getFullYear() == today.getFullYear() && regDate.getMonth() == today.getMonth() )\r\n                          {\r\n                              monthlyIncome += parseInt(user.salePrice)\r\n                                if( regDate.getDate() == today.getDate() )\r\n                                    dailyIncome += parseInt(user.salePrice)\r\n                           }\r\n\r\n                  }\r\n\r\n\r\n\r\n\r\n\r\n              }\r\n         //  console.log(dailyIncome)\r\n          $rootScope.users=res.data;\r\n          $scope.monthlyIncome = monthlyIncome\r\n          $scope.dailyIncome = dailyIncome\r\n      },function(){\r\n\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   $rootScope.getMembers();\r\n\r\n\r\n\r\n\r\n\r\n $scope.deleteMember=function(id){\r\n     if(confirm(\"Sure to delete?\")){\r\n     $http.delete(backendURL+'/api/users/'+id).then(function(res){\r\n         toastr.success(\"Success\");\r\n         console.log(res.data)\r\n          $rootScope.users=res.data;\r\n     },function(err){})\r\n     }\r\n }\r\n\r\n \r\n  $scope.showAddMember = function(id){\r\n\r\n     $('#addModel').modal('show');\r\n     $scope.addMember={};\r\n      $scope.addMember.role=\"member\";\r\n     $scope.roles=[\r\n          {label:\"Member\",value:\"member\"},\r\n          {label:\"Admin\",value:\"admin\"}\r\n\r\n      ]\r\n\r\n     console.log($scope.roles);\r\n }\r\n\r\n\r\n $scope.showUpdateMember = function(user){\r\n\r\n     $('#updateModel').modal('show');\r\n     $scope.update={};\r\n     $scope.update._id=user._id;\r\n      $scope.update.note=user.note;\r\n           $scope.update.salePrice=user.salePrice;\r\n     $scope.update.password=user.password;\r\n\r\n }\r\n\r\n\r\n\r\n\r\n//\r\n \r\n \r\n  $scope.openUpdate = function (user) {\r\n\r\n    $uibModal.open({\r\n      animation: true,\r\n      templateUrl: 'app/view/updateModel.html',\r\n      controller: 'UpdateController',\r\n\r\n      resolve: {\r\n        selected_user: function () {\r\n          return user;\r\n        }\r\n      }\r\n    });\r\n }\r\n\r\n  \r\n   $scope.openCreate = function () {\r\n\r\n   $uibModal.open({\r\n      animation: true,\r\n      templateUrl: 'app/view/createModel.html',\r\n      controller: 'CreateController',\r\n\r\n      resolve: {\r\n        items: function () {\r\n          return $scope.items;\r\n        }\r\n      }\r\n    });\r\n }\r\n\r\n \r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('LoginController', LoginController);\r\n\r\n  /** @ngInject */\r\n  function LoginController($http, $scope,toastr,AuthService,$location,backendURL) {\r\n\r\n $scope.user={\r\n     \r\n }\r\n\r\n $scope.adminLogin=function(user){\r\n\r\n     $http.post(backendURL+'/api/login',{id:user.id,password:user.password}).then(function(res){\r\n        toastr.success(\"Login Successfully!!\")\r\n\r\n        AuthService.login(user,res.data.token);\r\n         $location.path(\"/\")\r\n\r\n\r\n      },function(err){\r\n                    console.log(err);\r\n         toastr.error(\"Auth Failed!\")\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('CurrentController', CurrentController);\r\n\r\n  /** @ngInject */\r\n  function CurrentController($http, $scope,toastr,AuthService,backendURL) {\r\n\r\n\r\n\r\nfunction getOnlineMembers(){\r\n\r\n\r\n      $http.get(backendURL+'/api/onlineusers').then(function(res){\r\n          $scope.onlineusers=res.data;\r\n\r\n\r\n      },function(){\r\n\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n     getOnlineMembers();\r\n\r\n\r\n\r\n $scope.refreshOnlineMembers=getOnlineMembers;\r\n\r\n\r\n\r\n\r\n\r\n  $scope.takeoffline=function(id){\r\n\r\n     $http.delete(backendURL+'/api/onlineusers/'+id).then(function(res){\r\n         toastr.success(res.data);\r\n         getOnlineMembers();\r\n     },function(err){})\r\n }\r\n\r\n\r\n\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('CreateController', CreateController);\r\n\r\n  /** @ngInject */\r\n  function CreateController($http, $scope,toastr,AuthService,$location, $uibModalInstance,$rootScope,backendURL) {\r\n\r\n      \r\n      \r\n$scope.addMember={};\r\n$scope.addMember.role=\"member\";\r\n$scope.roles=[\r\n          {label:\"Member\",value:\"member\"},\r\n          {label:\"Admin\",value:\"admin\"}\r\n\r\n      ]      \r\n      \r\n$scope.saveMember  = function(user){\r\n    \r\n      if(user.password==\"\"||user.username==\"\")return toastr.warning(\"Username or Password cannot be empty\",\"Warning\");\r\n    $http.post(backendURL+'/api/users',user).then(function(res){\r\n\r\n         toastr.success(\"Success\");\r\n       $rootScope.users=res.data;\r\n        user={};\r\n     },function(res){\r\n          toastr.error(res.data,\"Error\");\r\n     })\r\n }\r\n\r\n\r\n$scope.closeModel = function(){\r\n\r\n      $uibModalInstance.dismiss('cancel');\r\n    }\r\n\r\n\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .controller('AccountController', AccountController);\r\n\r\n  /** @ngInject */\r\n  function AccountController($http, $scope,toastr,AuthService,$location,backendURL) {\r\n\r\n \r\n \r\n$scope.open1 = function() {\r\n    $scope.popup1.opened = true;\r\n  };\r\n\r\n  $scope.open2 = function() {\r\n    $scope.popup2.opened = true;\r\n  };\r\n\r\n  $scope.setDate = function(year, month, day) {\r\n    $scope.dt = new Date(year, month, day);\r\n  };\r\n\r\n  $scope.dateOptions = {\r\n    formatYear: 'yy',\r\n    startingDay: 1\r\n  };\r\n\r\n\r\n  $scope.popup1 = {\r\n    opened: false\r\n  };\r\n\r\n  $scope.popup2 = {\r\n    opened: false\r\n  };\r\n      \r\n      \r\n      \r\n $scope.adminLogin=function(user){\r\n\r\n     $http.post(backendURL+'/api/login',{id:user.id,password:user.password}).then(function(res){\r\n        toastr.success(\"Login Successfully!!\")\r\n\r\n        AuthService.login(user,res.data.token);\r\n         $location.path(\"/\")\r\n\r\n\r\n      },function(err){\r\n                    console.log(err);\r\n         toastr.error(\"Auth Failed!\")\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n$scope.getRange=function(from,to){\r\n    if(!from||!to)\r\n        return toastr.error('Please select a date range first.')\r\n        \r\n    $http.get(backendURL+'/api/rangetotal/'+from+'/'+to).then(function(res){\r\n        \r\n$scope.rangetotal=res.data.totalcost;    \r\n$scope.totalusers=res.data.users;\r\n\r\n\r\n      },function(err){\r\n                    console.log(err);\r\n         toastr.error(\"Auth Failed!\")\r\n\r\n      })\r\n    \r\n    \r\n    \r\n}\r\n\r\n \r\nfunction getTotal(){\r\n    $http.get(backendURL+'/api/daytotal').then(function(res){\r\n        \r\n$scope.daytotal=res.data.daytotal;    \r\n        \r\n\r\n\r\n      },function(err){\r\n                    console.log(err);\r\n         toastr.error(\"Auth Failed!\")\r\n\r\n      })\r\n    \r\n    $http.get(backendURL+'/api/monthtotal').then(function(res){\r\n        \r\n$scope.monthtotal=res.data.monthtotal;    \r\n        \r\n\r\n\r\n      },function(err){\r\n                    console.log(err);\r\n         toastr.error(\"Auth Failed!\")\r\n\r\n      })\r\n    \r\n}\r\n\r\ngetTotal();\r\n\r\n  }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('horseAdmin')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log,$rootScope,AuthService,$location) {\n\n    $log.debug('runBlock end');\n\n\n\n      $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n\n\n\n            if(toState.authRequired){\n                 if (!AuthService.isLogined()) {\n\n                   return $location.path('/login')\n                }\n\n             }\n            if (toState.templateUrl === 'app/view/login.html' && AuthService.isLogined()) {\n\n                $location.path('/home')\n            }\n\n\n\n\n        });\n\n\n  }\n\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('horseAdmin')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('current', {\r\n        url: '/current',\r\n        templateUrl: 'app/view/current.html',\r\n        controller: 'CurrentController',\r\n        controllerAs: 'current',\r\n        authRequired:true\r\n      })\r\n    .state('login', {\r\n        url: '/login',\r\n        templateUrl: 'app/view/login.html',\r\n        controller: 'LoginController',\r\n        controllerAs: 'login',\r\n        authRequired:false\r\n      })\r\n    .state('member', {\r\n        url: '/',\r\n        templateUrl: 'app/view/member.html',\r\n        controller: 'MemberController',\r\n        controllerAs: 'member',\r\n        authRequired:true,\r\n      })\r\n     .state('multiple', {\r\n        url: '/multiple',\r\n        templateUrl: 'app/view/multiple.html',\r\n        controller: 'MultipleController',\r\n        controllerAs: 'multiple',\r\n        authRequired:true\r\n      })\r\n        .state('account', {\r\n        url: '/accounting',\r\n        templateUrl: 'app/view/account.html',\r\n        controller: 'AccountController',\r\n        controllerAs: 'account',\r\n        authRequired:true\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n  }\r\n\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('horseAdmin')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig,$httpProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 2000;\n    toastrConfig.positionClass = 'toast-top-right';\n       $httpProvider.interceptors.push('authInterceptor');\n  }\n\n})();\n\nangular.module(\"horseAdmin\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/view/account.html\",\"<acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar><div class=\\\"container\\\"><h3>Accounting</h3><div class=\\\"row pad10\\\"><div class=\\\"col-md-3\\\"><label>From</label><p class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"\\\" ng-model=\\\"fromDate\\\" is-open=\\\"popup1.opened\\\" min-date=\\\"minDate\\\" max-date=\\\"maxDate\\\" datepicker-options=\\\"dateOptions\\\" date-disabled=\\\"disabled(date, mode)\\\" ng-required=\\\"true\\\" close-text=\\\"Close\\\" alt-input-formats=\\\"altInputFormats\\\"> <span class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"open1()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></p></div><div class=\\\"col-md-3\\\"><label>To</label><p class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"\\\" ng-model=\\\"toDate\\\" is-open=\\\"popup2.opened\\\" min-date=\\\"minDate\\\" max-date=\\\"maxDate\\\" datepicker-options=\\\"dateOptions\\\" date-disabled=\\\"disabled(date, mode)\\\" ng-required=\\\"true\\\" close-text=\\\"Close\\\"> <span class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"open2()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></p></div><div class=\\\"col-md-3 col-md-offset-3 pad10\\\"><button ng-click=\\\"getRange(fromDate,toDate)\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Confirm</button></div></div><div class=\\\"row\\\"><div class=\\\"table-responsive\\\"><table class=\\\"table table-hover table-bordered\\\"><thead></thead><td><strong>Monthly Income</strong></td><td><strong>Daily Income</strong></td><tr><td>{{ monthtotal | currency }}</td><td>{{ daytotal | currency }}</td></tr></table></div></div><div class=\\\"row\\\"><div class=\\\"table-responsive\\\"><table class=\\\"table table-hover table-bordered\\\"><thead></thead><td><strong>From:</strong> {{fromDate|date : \\'yyyy-MM-dd\\'}} <strong>To:</strong> {{toDate|date : \\'yyyy-MM-dd\\'}}</td><tr><td>{{ rangetotal | currency }}</td></tr></table></div></div><div class=\\\"row pad10\\\"><div class=\\\"table-responsive\\\"><table class=\\\"table table-hover table-bordered\\\"><thead></thead><td>Username ($ = admin)</td><td>Sale Price</td><td>Date</td><tr ng-repeat=\\\"u in totalusers | filter:search |orderBy:\\'-registeredOn\\'\\\"><td><span ng-show=\\\"u.role==\\'admin\\'\\\">$</span>{{u.username}}</td><td>{{u.salePrice|currency}}</td><td>{{u.registeredOn|date:\\'yyyy-MM-dd\\'}}</td></tr></table></div></div></div>\");\n$templateCache.put(\"app/view/createModel.html\",\"<div class=\\\"modal-header\\\"><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Add Member</h4></div><div class=\\\"modal-body\\\"><form><div class=\\\"form-group\\\"><label for=\\\"exampleInputEmail1\\\">Username</label> <input type=\\\"username\\\" ng-model=\\\"addMember.username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\"></div><div class=\\\"form-group\\\"><label for=\\\"exampleInputPassword1\\\">Password</label> <input type=\\\"password\\\" ng-model=\\\"addMember.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"></div><div class=\\\"form-group\\\"><label for=\\\"exampleInputPassword1\\\">Role</label><select class=\\\"form-control\\\" ng-model=\\\"addMember.role\\\" ng-options=\\\"r.value as r.label for r in roles\\\"></select></div><div class=\\\"form-group\\\"><label for=\\\"exampleInputEmail1\\\">Sale Price</label> <input type=\\\"number\\\" ng-model=\\\"addMember.salePrice\\\" class=\\\"form-control\\\" placeholder=\\\"salePrice\\\"></div><div class=\\\"form-group\\\"><label for=\\\"exampleInputPassword1\\\">Note</label> <input type=\\\"text\\\" ng-model=\\\"addMember.note\\\" class=\\\"form-control\\\" placeholder=\\\"Note\\\"></div></form></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"closeModel()\\\">Close</button> <button ng-click=\\\"saveMember(addMember)\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save</button></div>\");\n$templateCache.put(\"app/view/current.html\",\"<acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar><div class=\\\"container\\\"><h3>Current Online Member</h3>{{isLogined()}}<div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-8 col-md-offset-2\\\"><table class=\\\"table table-hover\\\"><thead></thead><td>Member</td><td>Login Date</td><td>Take it offline</td><tr ng-repeat=\\\"u in onlineusers\\\"><td>{{u.userkey}}</td><td>{{u.date | date:\\'yyyy-MM-dd HH:mm:ss\\'}}</td><td><button ng-click=\\\"takeoffline(u._id)\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-sm btn-info\\\">Offline</button></td></tr></table><button ng-click=\\\"refreshOnlineMembers()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-sm btn-primary\\\">Refresh</button></div></div></div>\");\n$templateCache.put(\"app/view/login.html\",\"<div class=\\\"container\\\" style=\\\"padding:20px;\\\"><div class=\\\"row\\\"><div class=\\\"col-md-6 col-md-offset-3\\\"><div class=\\\"jumbotron text-center\\\"><h2>RACING PRO Admin</h2><form class=\\\"pad20\\\"><div class=\\\"form-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"ID\\\" ng-model=\\\"user.id\\\"></div><div class=\\\"form-group\\\"><input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\" ng-model=\\\"user.password\\\"></div><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"adminLogin(user)\\\">Login</button></form></div></div></div></div>\");\n$templateCache.put(\"app/view/member.html\",\"<acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar><div class=\\\"container\\\"><h3>Member Manager</h3><div class=\\\"row pad10\\\"><div class=\\\"col-md-3 pad10\\\"><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputAmount\\\" placeholder=\\\"Username\\\" ng-model=\\\"search.username\\\"> <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-search\\\"></i></span></div></div><div class=\\\"col-md-3 col-md-offset-6 pad10\\\"><button ng-click=\\\"showpass()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">Password</button> <button ng-click=\\\"openCreate()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Add Member</button></div></div><div class=\\\"row pad10\\\"><div class=\\\"table-responsive\\\"><table class=\\\"table table-hover table-bordered\\\"><thead></thead><td>Username ($ = admin)</td><td>Password</td><td>Role</td><td>Sale Price</td><td>Note</td><td>Date</td><td>Delete/Update</td><tr ng-repeat=\\\"u in users | filter:search |orderBy:\\'-username\\'\\\"><td><span ng-show=\\\"u.role==\\'admin\\'\\\">$</span>{{u.username}}</td><td><span ng-show=\\\"showpassword\\\">{{u.password}}</span><span ng-hide=\\\"showpassword\\\">***</span></td><td>{{u.role}}</td><td>{{u.salePrice|currency}}</td><td>{{u.note}}</td><td>{{u.registeredOn|date:\\'yyyy-MM-dd\\'}}</td><td><div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"...\\\"><button class=\\\"btn btn-danger\\\" type=\\\"button\\\" ng-click=\\\"deleteMember(u._id)\\\">Delete</button> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"openUpdate(u)\\\">Update</button></div></td></tr></table></div></div></div>\");\n$templateCache.put(\"app/view/multiple.html\",\"<acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar><div class=\\\"container\\\"><h3>Multiple Online Member</h3><div class=\\\"row\\\"><div class=\\\"form-inline\\\"><div style=\\\"margin:20px;\\\" class=\\\"pull-right form-group\\\"><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputAmount\\\" placeholder=\\\"Account\\\" ng-model=\\\"searchacc.username\\\"> <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-search\\\"></i></span></div></div></div><table class=\\\"table table-hover\\\"><thead></thead><td>Count(s)</td><td>Account</td><td>Date</td><tr ng-repeat=\\\"rc in multiplelogin |filter:searchacc\\\"><td>{{rc.count}}</td><td>{{rc.username}}</td><td>{{rc.date | date:\\'yyyy-MM-dd HH:mm:ss\\'}}</td></tr></table><button ng-click=\\\"emptyRecords()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-sm btn-danger\\\">Empty Records</button></div></div>\");\n$templateCache.put(\"app/view/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=\\\"container\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle\\\" ng-init=\\\"navCollapsed = true\\\" ng-click=\\\"navCollapsed = !navCollapsed\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Racing Pro Admin</a></div><div class=\\\"collapse navbar-collapse\\\" ng-class=\\\"!navCollapsed && \\'in\\'\\\"><ul class=\\\"nav navbar-nav\\\"><li><a ng-href=\\\"#\\\">Member</a></li><li><a ng-href=\\\"#current\\\">Online User</a></li><li><a ng-href=\\\"#multiple\\\">Multiple Login</a></li><li><a ng-href=\\\"#accounting\\\">Accounting</a></li></ul></div></div></nav>\");\n$templateCache.put(\"app/view/updateModel.html\",\"<div class=\\\"modal-header\\\"><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Update</h4></div><div class=\\\"modal-body\\\"><form><div class=\\\"form-group\\\"><label for=\\\"exampleInputPassword1\\\">Password</label> <input type=\\\"password\\\" ng-model=\\\"update.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"></div><div class=\\\"form-group\\\"><label for=\\\"exampleInputEmail1\\\">Sale Price</label> <input type=\\\"number\\\" ng-model=\\\"update.salePrice\\\" class=\\\"form-control\\\" placeholder=\\\"salePrice\\\"></div><div class=\\\"form-group\\\"><label for=\\\"exampleInputPassword1\\\">Note</label> <input type=\\\"text\\\" ng-model=\\\"update.note\\\" class=\\\"form-control\\\" placeholder=\\\"Note\\\"></div></form></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"closeModel()\\\">Close</button> <button ng-click=\\\"updateMember(update)\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Update</button></div>\");}]);"],"sourceRoot":"/source/"}